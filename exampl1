import cv2
import numpy as np
import os
from google.colab.patches import cv2_imshow

# Установка wget, если он отсутствует
os.system("pip install wget")
import wget

# Загрузка файлов YOLO
wget.download("https://pjreddie.com/media/files/yolov3-tiny.weights", "yolov3-tiny.weights")
wget.download("https://raw.githubusercontent.com/pjreddie/darknet/master/cfg/yolov3-tiny.cfg", "yolov3-tiny.cfg")
wget.download("https://raw.githubusercontent.com/pjreddie/darknet/master/data/coco.names", "coco.names")

# Загрузка предварительно обученной модели YOLO
net = cv2.dnn.readNet("yolov3-tiny.weights", "yolov3-tiny.cfg")
layer_names = net.getLayerNames()
out_layers = [layer_names[i - 1] for i in net.getUnconnectedOutLayers()]

# Загрузка классов
with open("coco.names", "r") as f:
    classes = [line.strip() for line in f.readlines()]

# Путь к изображению в Google Colab
image_path = "/content/ғ.jpg"
image = cv2.imread(image_path)
h, w = image.shape[:2]

# Подготовка изображения для YOLO
blob = cv2.dnn.blobFromImage(image, 1/255.0, (416, 416), swapRB=True, crop=False)
net.setInput(blob)
outs = net.forward(out_layers)

# Обработка результатов
boxes, confidences, class_ids = [], [], []
for out in outs:
    for detection in out:
        scores = detection[5:]
        class_id = np.argmax(scores)
        confidence = scores[class_id]
        if confidence > 0.3:
            center_x, center_y, width, height = (detection[:4] * np.array([w, h, w, h])).astype("int")
            x, y = int(center_x - width / 2), int(center_y - height / 2)
            boxes.append([x, y, int(width), int(height)])
            confidences.append(float(confidence))
            class_ids.append(class_id)

# Применение NMS для удаления дублирующихся рамок
indices = cv2.dnn.NMSBoxes(boxes, confidences, 0.5, 0.4)
if isinstance(indices, tuple):
    indices = []  # Исправление ошибки, если NMSBoxes возвращает пустой кортеж
else:
    indices = indices.flatten()

for i in indices:
    x, y, w, h = boxes[i]
    label = f"{classes[class_ids[i]]}: {confidences[i]:.2f}"
    cv2.rectangle(image, (x, y), (x + w, y + h), (0, 255, 0), 2)
    cv2.putText(image, label, (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)

# Отображение результата в Google Colab
cv2_imshow(image)
